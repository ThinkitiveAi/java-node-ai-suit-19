{
  "openapi": "3.0.0",
  "info": {
    "title": "Health First API",
    "description": "Complete healthcare management API with provider and patient management, availability scheduling, and appointment booking",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@healthfirst.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Development server"
    },
    {
      "url": "https://api.healthfirst.com/api/v1",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token for authentication"
      }
    },
    "schemas": {
      "Provider": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Provider ID"
          },
          "first_name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          },
          "last_name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone_number": {
            "type": "string"
          },
          "specialization": {
            "type": "string",
            "minLength": 3,
            "maxLength": 100
          },
          "license_number": {
            "type": "string"
          },
          "years_of_experience": {
            "type": "integer",
            "minimum": 0,
            "maximum": 50
          },
          "clinic_address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "maxLength": 200
              },
              "city": {
                "type": "string",
                "maxLength": 100
              },
              "state": {
                "type": "string",
                "maxLength": 50
              },
              "zip": {
                "type": "string",
                "pattern": "^\\d{5}$"
              }
            },
            "required": [
              "street",
              "city",
              "state",
              "zip"
            ]
          },
          "verification_status": {
            "type": "string",
            "enum": [
              "pending",
              "verified",
              "rejected"
            ]
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "Patient": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Patient ID"
          },
          "first_name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          },
          "last_name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone_number": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "other",
              "prefer_not_to_say"
            ]
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "maxLength": 200
              },
              "city": {
                "type": "string",
                "maxLength": 100
              },
              "state": {
                "type": "string",
                "maxLength": 50
              },
              "zip": {
                "type": "string",
                "pattern": "^\\d{5}$"
              }
            },
            "required": [
              "street",
              "city",
              "state",
              "zip"
            ]
          },
          "emergency_contact": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 100
              },
              "phone": {
                "type": "string"
              },
              "relationship": {
                "type": "string",
                "maxLength": 50
              }
            }
          },
          "insurance_info": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "policy_number": {
                "type": "string"
              }
            }
          }
        }
      },
      "Availability": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date in YYYY-MM-DD format"
          },
          "start_time": {
            "type": "string",
            "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
            "description": "Time in HH:mm format"
          },
          "end_time": {
            "type": "string",
            "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
            "description": "Time in HH:mm format"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone (e.g., America/New_York)"
          },
          "slot_duration": {
            "type": "integer",
            "minimum": 15,
            "maximum": 240,
            "description": "Duration in minutes (must be divisible by 15)"
          },
          "break_duration": {
            "type": "integer",
            "minimum": 0,
            "maximum": 60,
            "description": "Break duration in minutes (must be divisible by 5)"
          },
          "is_recurring": {
            "type": "boolean",
            "default": false
          },
          "recurrence_pattern": {
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "monthly"
            ],
            "description": "Required if is_recurring is true"
          },
          "recurrence_end_date": {
            "type": "string",
            "format": "date",
            "description": "Required if is_recurring is true"
          },
          "appointment_type": {
            "type": "string",
            "enum": [
              "consultation",
              "follow_up",
              "emergency",
              "routine_checkup",
              "specialist_consultation"
            ]
          },
          "location": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "clinic",
                  "virtual",
                  "home"
                ]
              },
              "address": {
                "type": "string"
              },
              "room_number": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "address"
            ]
          },
          "pricing": {
            "type": "object",
            "properties": {
              "base_fee": {
                "type": "number",
                "minimum": 0
              },
              "insurance_accepted": {
                "type": "boolean"
              },
              "currency": {
                "type": "string",
                "default": "USD"
              },
              "copay": {
                "type": "number",
                "minimum": 0,
                "default": 0
              },
              "deductible_applies": {
                "type": "boolean",
                "default": true
              }
            },
            "required": [
              "base_fee",
              "insurance_accepted"
            ]
          },
          "notes": {
            "type": "string",
            "maxLength": 1000
          }
        },
        "required": [
          "date",
          "start_time",
          "end_time",
          "timezone",
          "slot_duration",
          "appointment_type",
          "location",
          "pricing"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health Check"
        ],
        "summary": "Health check endpoint",
        "description": "Returns the health status of the API",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "uptime": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/provider/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Provider login",
        "description": "Authenticate a provider and return JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              },
              "example": {
                "email": "john.doe@clinic.com",
                "password": "SecurePassword123!"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string"
                        },
                        "token_type": {
                          "type": "string"
                        },
                        "expires_in": {
                          "type": "integer"
                        },
                        "provider": {
                          "$ref": "#/components/schemas/Provider"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/provider/register": {
      "post": {
        "tags": [
          "Provider Management"
        ],
        "summary": "Register a new provider",
        "description": "Create a new provider account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50
                  },
                  "last_name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8
                  },
                  "confirm_password": {
                    "type": "string"
                  },
                  "specialization": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 100
                  },
                  "license_number": {
                    "type": "string"
                  },
                  "years_of_experience": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 50
                  },
                  "clinic_address": {
                    "type": "object",
                    "properties": {
                      "street": {
                        "type": "string",
                        "maxLength": 200
                      },
                      "city": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "state": {
                        "type": "string",
                        "maxLength": 50
                      },
                      "zip": {
                        "type": "string",
                        "pattern": "^\\d{5}$"
                      }
                    },
                    "required": [
                      "street",
                      "city",
                      "state",
                      "zip"
                    ]
                  }
                },
                "required": [
                  "first_name",
                  "last_name",
                  "email",
                  "phone_number",
                  "password",
                  "confirm_password",
                  "specialization",
                  "license_number",
                  "clinic_address"
                ]
              },
              "example": {
                "first_name": "Dr. Sarah",
                "last_name": "Johnson",
                "email": "sarah.johnson@medical.com",
                "phone_number": "+1987654321",
                "password": "SecurePassword123!",
                "confirm_password": "SecurePassword123!",
                "specialization": "Pediatrics",
                "license_number": "MD987654321",
                "years_of_experience": 15,
                "clinic_address": {
                  "street": "456 Medical Plaza",
                  "city": "Boston",
                  "state": "MA",
                  "zip": "02101"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Provider registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Provider"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/provider/specializations": {
      "get": {
        "tags": [
          "Provider Management"
        ],
        "summary": "Get available specializations",
        "description": "Retrieve list of available medical specializations",
        "responses": {
          "200": {
            "description": "List of specializations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/provider/{providerId}": {
      "get": {
        "tags": [
          "Provider Management"
        ],
        "summary": "Get provider by ID",
        "description": "Retrieve provider details by ID",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Provider ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Provider details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Provider"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Provider not found"
          }
        }
      }
    },
    "/patient/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Patient login",
        "description": "Authenticate a patient and return JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              },
              "example": {
                "email": "jane.smith@email.com",
                "password": "SecurePassword123!"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string"
                        },
                        "token_type": {
                          "type": "string"
                        },
                        "expires_in": {
                          "type": "integer"
                        },
                        "patient": {
                          "$ref": "#/components/schemas/Patient"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/patient/register": {
      "post": {
        "tags": [
          "Patient Management"
        ],
        "summary": "Register a new patient",
        "description": "Create a new patient account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50
                  },
                  "last_name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8
                  },
                  "confirm_password": {
                    "type": "string"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "format": "date"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "male",
                      "female",
                      "other",
                      "prefer_not_to_say"
                    ]
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "street": {
                        "type": "string",
                        "maxLength": 200
                      },
                      "city": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "state": {
                        "type": "string",
                        "maxLength": 50
                      },
                      "zip": {
                        "type": "string",
                        "pattern": "^\\d{5}$"
                      }
                    },
                    "required": [
                      "street",
                      "city",
                      "state",
                      "zip"
                    ]
                  },
                  "emergency_contact": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "phone": {
                        "type": "string"
                      },
                      "relationship": {
                        "type": "string",
                        "maxLength": 50
                      }
                    }
                  },
                  "insurance_info": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "policy_number": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "first_name",
                  "last_name",
                  "email",
                  "phone_number",
                  "password",
                  "confirm_password",
                  "date_of_birth",
                  "gender",
                  "address"
                ]
              },
              "example": {
                "first_name": "John",
                "last_name": "Patient",
                "email": "john.patient@email.com",
                "phone_number": "+1555123456",
                "password": "SecurePassword123!",
                "confirm_password": "SecurePassword123!",
                "date_of_birth": "1990-05-15",
                "gender": "male",
                "address": {
                  "street": "789 Patient Street",
                  "city": "Chicago",
                  "state": "IL",
                  "zip": "60601"
                },
                "emergency_contact": {
                  "name": "Jane Patient",
                  "phone": "+1555123457",
                  "relationship": "spouse"
                },
                "insurance_info": {
                  "provider": "Blue Cross",
                  "policy_number": "BC123456789"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Patient registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Patient"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/provider/availability": {
      "post": {
        "tags": [
          "Availability Management"
        ],
        "summary": "Create provider availability",
        "description": "Create availability slots for a provider",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Availability"
              },
              "example": {
                "date": "2026-04-01",
                "start_time": "09:00",
                "end_time": "12:00",
                "timezone": "America/New_York",
                "slot_duration": 30,
                "break_duration": 15,
                "is_recurring": false,
                "appointment_type": "consultation",
                "location": {
                  "type": "clinic",
                  "address": "123 Medical Center Dr, New York, NY 10001",
                  "room_number": "Room 205",
                  "city": "New York",
                  "state": "NY",
                  "zip": "10001"
                },
                "pricing": {
                  "base_fee": 150,
                  "insurance_accepted": true,
                  "currency": "USD",
                  "copay": 25,
                  "deductible_applies": true
                },
                "notes": "Morning consultation slots"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Availability created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "availability_id": {
                          "type": "string"
                        },
                        "slots_created": {
                          "type": "integer"
                        },
                        "date_range": {
                          "type": "object",
                          "properties": {
                            "start": {
                              "type": "string",
                              "format": "date"
                            },
                            "end": {
                              "type": "string",
                              "format": "date"
                            }
                          }
                        },
                        "total_appointments_available": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or time slot conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        }
      }
    },
    "/provider/{providerId}/availability": {
      "get": {
        "tags": [
          "Availability Management"
        ],
        "summary": "Get provider availability",
        "description": "Retrieve availability slots for a specific provider",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Provider ID"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "available",
                "unavailable",
                "cancelled"
              ]
            },
            "description": "Filter by status"
          },
          {
            "name": "appointment_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "consultation",
                "follow_up",
                "emergency",
                "routine_checkup",
                "specialist_consultation"
              ]
            },
            "description": "Filter by appointment type"
          }
        ],
        "responses": {
          "200": {
            "description": "Provider availability",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "provider_id": {
                          "type": "string"
                        },
                        "availability_summary": {
                          "type": "object",
                          "properties": {
                            "total_slots": {
                              "type": "integer"
                            },
                            "available_slots": {
                              "type": "integer"
                            },
                            "booked_slots": {
                              "type": "integer"
                            },
                            "cancelled_slots": {
                              "type": "integer"
                            }
                          }
                        },
                        "availability": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date"
                              },
                              "availability": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/Availability"
                                }
                              },
                              "slots": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "slot_id": {
                                      "type": "string"
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "end_time": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "available",
                                        "booked",
                                        "cancelled",
                                        "completed",
                                        "no_show"
                                      ]
                                    },
                                    "appointment_type": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/availability/search": {
      "get": {
        "tags": [
          "Availability Management"
        ],
        "summary": "Search available slots",
        "description": "Search for available appointment slots",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Specific date to search (YYYY-MM-DD)"
          },
          {
            "name": "start_date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for range search"
          },
          {
            "name": "end_date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for range search"
          },
          {
            "name": "specialization",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Medical specialization"
          },
          {
            "name": "location",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Location (city/state/zip)"
          },
          {
            "name": "appointment_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "consultation",
                "follow_up",
                "emergency",
                "routine_checkup",
                "specialist_consultation"
              ]
            },
            "description": "Type of appointment"
          },
          {
            "name": "insurance_accepted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by insurance acceptance"
          },
          {
            "name": "max_price",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "description": "Maximum price filter"
          },
          {
            "name": "timezone",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Timezone for time conversion"
          },
          {
            "name": "available_only",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "default": true,
            "description": "Show only available slots"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "search_criteria": {
                          "type": "object"
                        },
                        "total_results": {
                          "type": "integer"
                        },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "provider": {
                                "$ref": "#/components/schemas/Provider"
                              },
                              "available_slots": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "slot_id": {
                                      "type": "string"
                                    },
                                    "date": {
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "start_time": {
                                      "type": "string"
                                    },
                                    "end_time": {
                                      "type": "string"
                                    },
                                    "appointment_type": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "object"
                                    },
                                    "pricing": {
                                      "type": "object"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Health Check",
      "description": "API health monitoring"
    },
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Provider Management",
      "description": "Healthcare provider operations"
    },
    {
      "name": "Patient Management",
      "description": "Patient account operations"
    },
    {
      "name": "Availability Management",
      "description": "Provider availability and appointment scheduling"
    }
  ]
}