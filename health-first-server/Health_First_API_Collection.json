{
  "info": {
    "name": "Health First API Collection",
    "description": "Complete API collection for the Health First healthcare management system. Includes provider management, patient management, and availability scheduling endpoints.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "provider_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "patient_token",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{provider_token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Check if the server is running and healthy"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Provider Management",
      "item": [
        {
          "name": "Register Provider",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"Dr. John\",\n  \"last_name\": \"Smith\",\n  \"email\": \"john.smith@healthcare.com\",\n  \"phone_number\": \"+1-555-123-4567\",\n  \"password\": \"SecurePass123!\",\n  \"confirm_password\": \"SecurePass123!\",\n  \"specialization\": \"Cardiology\",\n  \"license_number\": \"MD123456\",\n  \"years_of_experience\": 15,\n  \"clinic_address\": \"123 Medical Center Dr, Healthcare City, HC 12345\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/provider/register",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "provider", "register"]
            },
            "description": "Register a new healthcare provider"
          },
          "response": []
        },
        {
          "name": "Login Provider",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.smith@healthcare.com\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/provider/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "provider", "login"]
            },
            "description": "Login provider and get JWT token"
          },
          "response": []
        },
        {
          "name": "Get Specializations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/provider/specializations",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "provider", "specializations"]
            },
            "description": "Get all available medical specializations"
          },
          "response": []
        },
        {
          "name": "Get Providers by Specialization",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/provider/specialization/Cardiology?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "provider", "specialization", "Cardiology"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get providers by specialization with pagination"
          },
          "response": []
        },
        {
          "name": "Get Provider by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/provider/PROVIDER_ID_HERE",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "provider", "PROVIDER_ID_HERE"]
            },
            "description": "Get provider details by ID"
          },
          "response": []
        },
        {
          "name": "Check Email Exists",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/provider/check-email/john.smith@healthcare.com",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "provider", "check-email", "john.smith@healthcare.com"]
            },
            "description": "Check if email already exists"
          },
          "response": []
        },
        {
          "name": "Check License Exists",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/provider/check-license/MD123456",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "provider", "check-license", "MD123456"]
            },
            "description": "Check if license number already exists"
          },
          "response": []
        },
        {
          "name": "Get Provider Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/provider/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "provider", "stats"]
            },
            "description": "Get provider statistics"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Patient Management",
      "item": [
        {
          "name": "Register Patient",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"Jane\",\n  \"last_name\": \"Doe\",\n  \"email\": \"jane.doe@email.com\",\n  \"phone_number\": \"+1-555-987-6543\",\n  \"password\": \"SecurePass123!\",\n  \"confirm_password\": \"SecurePass123!\",\n  \"date_of_birth\": \"1990-05-15\",\n  \"gender\": \"female\",\n  \"address\": \"456 Patient Street, Health City, HC 54321\",\n  \"emergency_contact\": {\n    \"name\": \"John Doe\",\n    \"relationship\": \"Spouse\",\n    \"phone\": \"+1-555-111-2222\"\n  },\n  \"medical_history\": [\n    {\n      \"condition\": \"Hypertension\",\n      \"diagnosed_date\": \"2020-01-15\",\n      \"status\": \"controlled\"\n    }\n  ],\n  \"insurance_info\": {\n    \"provider\": \"HealthCare Plus\",\n    \"policy_number\": \"HC123456789\",\n    \"group_number\": \"GRP001\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/patient/register",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "patient", "register"]
            },
            "description": "Register a new patient"
          },
          "response": []
        },
        {
          "name": "Login Patient",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"jane.doe@email.com\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/patient/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "patient", "login"]
            },
            "description": "Login patient and get JWT token"
          },
          "response": []
        },
        {
          "name": "Get Patient by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/patient/PATIENT_ID_HERE",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "patient", "PATIENT_ID_HERE"]
            },
            "description": "Get patient details by ID"
          },
          "response": []
        },
        {
          "name": "Check Email Exists",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/patient/check-email/jane.doe@email.com",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "patient", "check-email", "jane.doe@email.com"]
            },
            "description": "Check if patient email already exists"
          },
          "response": []
        },
        {
          "name": "Check Phone Exists",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/patient/check-phone/+1-555-987-6543",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "patient", "check-phone", "+1-555-987-6543"]
            },
            "description": "Check if patient phone number already exists"
          },
          "response": []
        },
        {
          "name": "Get Patients by Age Range",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/patient/age-range?min_age=25&max_age=65&page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "patient", "age-range"],
              "query": [
                {
                  "key": "min_age",
                  "value": "25"
                },
                {
                  "key": "max_age",
                  "value": "65"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get patients by age range with pagination"
          },
          "response": []
        },
        {
          "name": "Get Patients by Gender",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/patient/gender/female?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "patient", "gender", "female"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get patients by gender with pagination"
          },
          "response": []
        },
        {
          "name": "Get Patient Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/patient/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "patient", "stats"]
            },
            "description": "Get patient statistics and analytics"
          },
          "response": []
        },
        {
          "name": "Get Patients with Insurance",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/patient/with-insurance?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "patient", "with-insurance"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get patients with insurance information"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Availability Management",
      "item": [
        {
          "name": "Create Availability (Provider)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"date\": \"2024-01-15\",\n  \"start_time\": \"09:00\",\n  \"end_time\": \"17:00\",\n  \"timezone\": \"America/New_York\",\n  \"slot_duration\": 30,\n  \"break_duration\": 15,\n  \"is_recurring\": true,\n  \"recurrence_pattern\": \"weekly\",\n  \"recurrence_end_date\": \"2024-02-15\",\n  \"max_appointments_per_slot\": 1,\n  \"notes\": \"Regular office hours\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/provider/availability",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "provider", "availability"]
            },
            "description": "Create availability slots for a provider (requires authentication)"
          },
          "response": []
        },
        {
          "name": "Get Provider Availability",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/provider/PROVIDER_ID_HERE/availability?start_date=2024-01-01&end_date=2024-01-31",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "provider", "PROVIDER_ID_HERE", "availability"],
              "query": [
                {
                  "key": "start_date",
                  "value": "2024-01-01"
                },
                {
                  "key": "end_date",
                  "value": "2024-01-31"
                }
              ]
            },
            "description": "Get provider availability for a date range"
          },
          "response": []
        },
        {
          "name": "Update Availability Slot",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"start_time\": \"10:00\",\n  \"end_time\": \"16:00\",\n  \"slot_duration\": 45,\n  \"break_duration\": 30,\n  \"notes\": \"Updated office hours\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/provider/availability/SLOT_ID_HERE",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "provider", "availability", "SLOT_ID_HERE"]
            },
            "description": "Update availability slot (requires authentication)"
          },
          "response": []
        },
        {
          "name": "Delete Availability Slot",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/provider/availability/SLOT_ID_HERE",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "provider", "availability", "SLOT_ID_HERE"]
            },
            "description": "Delete availability slot (requires authentication)"
          },
          "response": []
        },
        {
          "name": "Search Available Slots",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/availability/search?specialization=Cardiology&date=2024-01-15&timezone=America/New_York",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "availability", "search"],
              "query": [
                {
                  "key": "specialization",
                  "value": "Cardiology"
                },
                {
                  "key": "date",
                  "value": "2024-01-15"
                },
                {
                  "key": "timezone",
                  "value": "America/New_York"
                }
              ]
            },
            "description": "Search for available appointment slots"
          },
          "response": []
        },
        {
          "name": "Get Availability Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{provider_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/provider/PROVIDER_ID_HERE/availability/stats?start_date=2024-01-01&end_date=2024-01-31",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "provider", "PROVIDER_ID_HERE", "availability", "stats"],
              "query": [
                {
                  "key": "start_date",
                  "value": "2024-01-01"
                },
                {
                  "key": "end_date",
                  "value": "2024-01-31"
                }
              ]
            },
            "description": "Get availability statistics for a provider (requires authentication)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Appointment Management",
      "item": [
        {
          "name": "Book Appointment (Patient)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{patient_token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"slot_id\": \"SLOT_ID_HERE\",\n  \"appointment_type\": \"consultation\",\n  \"notes\": \"Initial consultation\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/appointments/book",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "appointments", "book"]
            },
            "description": "Book an available appointment slot. Requires patient token."
          },
          "response": []
        },
        {
          "name": "List My Appointments (Patient/Provider)",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{patient_token}}" }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/appointments?status=booked&page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "appointments"],
              "query": [
                { "key": "status", "value": "booked" },
                { "key": "page", "value": "1" },
                { "key": "limit", "value": "10" }
              ]
            },
            "description": "List appointments for the authenticated user (patient or provider). Use provider token to list provider appointments."
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set base URL if not already set",
          "if (!pm.collectionVariables.get('base_url')) {",
          "    pm.collectionVariables.set('base_url', 'http://localhost:3000');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-extract tokens from login responses",
          "if (pm.response.code === 200 || pm.response.code === 201) {",
          "    const response = pm.response.json();",
          "    if (response.data && response.data.token) {",
          "        if (pm.request.url.path.includes('provider')) {",
          "            pm.collectionVariables.set('provider_token', response.data.token);",
          "        } else if (pm.request.url.path.includes('patient')) {",
          "            pm.collectionVariables.set('patient_token', response.data.token);",
          "        }",
          "    }",
          "}"
        ]
      }
    }
  ]
} 